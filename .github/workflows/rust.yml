name: Rust

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "master" ]

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.OS_NAME }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, x86_64-pc-windows-msvc, x86_64-apple-darwin, aarch64-apple-darwin]
        include:
          - target: x86_64-unknown-linux-gnu
            OS_NAME: Linux x64
            OUTPUT_FILE: monisens
            RELEASE_FILE: monisens_linux_x86_64
          - target: aarch64-unknown-linux-gnu
            OS_NAME: Linux x64
            OUTPUT_FILE: monisens
            RELEASE_FILE: monisens_linux_aarch64
          - target: windows-latest
            OS_NAME: Windows x64
            OUTPUT_FILE: monisens.exe
            RELEASE_FILE: monisens_win_x86_64.exe
          - target: macos-latest
            OS_NAME: macOS x64
            OUTPUT_FILE: monisens
            RELEASE_FILE: monisens_macos_x86_64
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target ${{ matrix.target }}
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: test
        args: --verbose --target ${{ matrix.target }}
    - name: Package
      shell: bash
      run: |
        mv target/${{ matrix.target }}/release/${{ matrix.OUTPUT_FILE }} ${{ matrix.RELEASE_FILE }}
    - name: Create release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.RELEASE_FILE }}
        token: ${{ secrets.GITHUB_TOKEN }}
