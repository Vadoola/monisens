name: Rust

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "master" ]

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  TIMEOUT: 30
  MAC_ARM_TARGET: aarch64-apple-darwin

jobs:
  build:
    name: Build for ${{ matrix.OS_NAME }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: ${{ env.TIMEOUT }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            OS_NAME: Linux x64
            OUTPUT_FILE: monisens
            RELEASE_FILE: monisens_linux
          - os: windows-latest
            OS_NAME: Windows x64
            OUTPUT_FILE: monisens.exe
            RELEASE_FILE: monisens_win.exe
          - os: macos-latest
            OS_NAME: macOS x64
            OUTPUT_FILE: monisens
            RELEASE_FILE: monisens_macos
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --release && mv target/release/${{ matrix.OUTPUT_FILE }} ${{ matrix.RELEASE_FILE }}
    - name: Run tests
      run: cargo test --verbose
    - name: Create release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.RELEASE_FILE }}
        token: ${{ secrets.GITHUB_TOKEN }}

  build_mac_arm:
    name: Build for macOS arm64
    runs-on: macos-latest
    timeout-minutes: ${{ env.TIMEOUT }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Add target
      run: rustup target add $MAC_ARM_TARGET
    - name: Build
      run: cargo build --target $MAC_ARM_TARGET --release && mv target/release/${{ matrix.OUTPUT_FILE }} ${{ matrix.RELEASE_FILE }}
    - name: Run tests
      run: cargo test --verbose
    - name: Create release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.RELEASE_FILE }}
        token: ${{ secrets.GITHUB_TOKEN }}
